-- 1.
INSERT INTO MOVIESTAR
VALUES ('Bruce Willis', 'somewhere', 'M', '2000-01-01')

CREATE TRIGGER t
ON MOVIE
AFTER INSERT
AS
	INSERT INTO STARSIN(MOVIETITLE, MOVIEYEAR, STARNAME)
	SELECT TITLE, YEAR, 'Bruce Willis'
	FROM inserted
	WHERE TITLE LIKE '%SAVE%' OR TITLE LIKE '%WORLD%'

INSERT INTO MOVIE
VALUES ('Armageddon, save, world', 1998, 120, 'Y', 'MGM', 123)

SELECT * FROM STARSIN

DROP TRIGGER t

-- 2.
CREATE TRIGGER t
ON MOVIEEXEC
AFTER INSERT, UPDATE, DELETE
AS
	IF(SELECT AVG(NETWORTH)
	   FROM MOVIEEXEC) < 500000
	BEGIN
	   RAISERROR('Error: Average networth cannot be < 500000', 16, 1)
	   ROLLBACK TRANSACTION
	END

-- 3.
CREATE TRIGGER t
ON MOVIEEXEC
INSTEAD OF DELETE
AS
BEGIN
	UPDATE MOVIE
	SET PRODUCERC# = NULL
	WHERE PRODUCERC# IN (SELECT CERT# FROM deleted)

	DELETE FROM MOVIEEXEC
	WHERE CERT# IN (SELECT CERT# FROM deleted)
END

-- 4.
CREATE TRIGGER t
ON STARSIN
INSTEAD OF INSERT
AS
BEGIN
	INSERT INTO MOVIESTAR(NAME)
	SELECT DISTINCT STARNAME
	FROM inserted
	WHERE STARNAME NOT IN (SELECT NAME FROM MOVIESTAR)

	INSERT INTO MOVIE(TITLE, YEAR)
	SELECT DISTINCT MOVIETITLE, MOVIEYEAR
	FROM inserted
	WHERE NOT EXISTS (SELECT * FROM MOVIE
					  WHERE TITLE = MOVIETITLE AND YEAR = MOVIEYEAR)

	INSERT INTO STARSIN
	SELECT *
	FROM inserted
END

--------------------------------------

-- 1.
CREATE TRIGGER t
ON laptop
AFTER DELETE
AS
	INSERT INTO pc
	SELECT code + 100, '1121', speed, ram, hd, '52x', price
	FROM deleted
	WHERE model IN (
		SELECT model
		FROM product
		WHERE maker = 'D')

DROP TRIGGER t

-- 2.
CREATE TRIGGER t
ON pc
AFTER UPDATE
AS
	IF EXISTS (
		SELECT *
		FROM PC AS p
		WHERE EXISTS (
			SELECT *
			FROM pc
			WHERE price < p.price AND speed = p.speed)
			AND CODE IN (
				SELECT i.code
				FROM deleted AS d
				JOIN inserted AS i ON d.code = i.code
				WHERE d.price != i.price))
	BEGIN 
		RAISERROR('...', 16, 10)
		ROLLBACK
	END

-- 3.
CREATE TRIGGER t
ON product
AFTER INSERT, UPDATE
AS
IF EXISTS (
	SELECT *
	FROM product p1
	JOIN product p2 ON p1.maker = p2.maker
	WHERE p1.type = 'PC' AND p2.type = 'Printer')
BEGIN
	RAISERROR('...', 16, 10)
	ROLLBACK
END

-- 4.
CREATE TRIGGER t
ON pc
AFTER INSERT, UPDATE
AS
IF EXISTS (
	SELECT *
	FROM inserted i
	WHERE NOT EXISTS (
		SELECT 1
		FROM laptop l
		JOIN product p1 ON p1.model = l.model
		JOIN product p2 ON p2.model = l.model
		WHERE p1.maker = p2.maker AND l.speed >= i.speed
		)
	)
BEGIN 
	RAISERROR ('...', 16, 10)
	ROLLBACK
END

-- 5.
CREATE TRIGGER t
ON laptop
AFTER UPDATE
AS
IF EXISTS (
	SELECT maker
	FROM laptop
	JOIN product ON laptop.model = product.model
	GROUP BY maker
	HAVING AVG(PRICE) < 2000)
BEGIN
	RAISERROR('...', 16, 10)
	ROLLBACK
END

-- 6.
CREATE TRIGGER t
ON laptop
AFTER INSERT, UPDATE
AS
IF EXISTS (
	SELECT *
	FROM inserted i
	WHERE EXISTS (
		SELECT 1
		FROM PC p
		WHERE i.ram > p.ram AND i.price <= p.price
		)
	)
BEGIN 
	RAISERROR('...', 16, 10)
	ROLLBACK
END

-- 7.
CREATE TRIGGER t
ON printer
INSTEAD OF INSERT
AS
	INSERT INTO printer
	SELECT *
	FROM inserted
	WHERE color != 'y' OR type != 'Matrix'

DROP TRIGGER t

--------------------------------------

-- 1.
CREATE TRIGGER t
ON CLASSES
INSTEAD OF INSERT
AS
	INSERT INTO CLASSES (CLASS, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT)
	SELECT CLASS, TYPE, COUNTRY, NUMGUNS, BORE,
		CASE
			WHEN DISPLACEMENT < 35000 THEN 35000
			ELSE DISPLACEMENT
		END
	FROM inserted

-- 2.
CREATE VIEW ShipsCount
AS
	SELECT c.CLASS, COUNT(s.NAME) AS Ships
	FROM CLASSES c
	LEFT JOIN SHIPS s ON c.CLASS = s.CLASS
	GROUP BY c.CLASS

CREATE TRIGGER t
ON ShipsCount
INSTEAD OF DELETE
AS
	DELETE FROM SHIPS
	WHERE CLASS IN (SELECT CLASS FROM deleted)

	DELETE FROM CLASSES
	WHERE CLASS IN (SELECT CLASS FROM deleted)

INSERT INTO CLASSES
VALUES 
	('Test 1', 'bb', 'Bulgaria', 20, 20, 50000),
	('Test 2', 'bc', 'Bulgaria', 18, 21, 45000)

INSERT INTO SHIPS  
values ('Test Ship', 'Test 1', 2020)

DELETE FROM ShipsCount
WHERE CLASS = 'Test 1'

SELECT *
FROM CLASSES
WHERE CLASS LIKE 'Test%'

-- 3.
CREATE TRIGGER t
ON SHIPS
AFTER INSERT, UPDATE
AS
	IF EXISTS (
		SELECT CLASS
		FROM SHIPS
		GROUP BY CLASS
		HAVING COUNT(*) > 2
		)
BEGIN 
	RAISERROR ('...', 16, 10)
	ROLLBACK
END

-- 4.
CREATE TRIGGER t
ON OUTCOMES
AFTER INSERT
AS
	IF EXISTS (
		SELECT o1.BATTLE
		FROM OUTCOMES o1
		JOIN OUTCOMES o2 ON o1.BATTLE = o2.BATTLE AND o1.SHIP <> o2.SHIP
		JOIN SHIPS s1 ON s1.NAME = o1.SHIP
		JOIN CLASSES c1 ON c1.CLASS = s1.CLASS
		JOIN SHIPS s2 ON s2.NAME = o2.SHIP
		JOIN CLASSES c2 ON c2.CLASS = s2.CLASS
		WHERE ((c1.NUMGUNS > 9 AND c2.NUMGUNS < 9) OR (c1.NUMGUNS < 9 AND c2.NUMGUNS > 9))
			AND (o1.BATTLE IN (SELECT BATTLE FROM inserted))
		)
BEGIN
	RAISERROR ('...', 16, 10)
	ROLLBACK
END

-- 5.
CREATE TRIGGER t1
ON OUTCOMES
AFTER INSERT, UPDATE
AS
	IF EXISTS (
		SELECT *
		FROM OUTCOMES o1
		JOIN BATTLES b1 ON b1.NAME = o1.BATTLE
		JOIN OUTCOMES o2 ON o1.SHIP = o2.SHIP
		JOIN BATTLES b2 ON b2.NAME = o2.BATTLE
		WHERE o1.RESULT = 'sunk'
		AND b1.DATE < b2.DATE)
BEGIN
	RAISERROR('...', 16, 10)
	ROLLBACK
END

CREATE TRIGGER t2
ON BATTLES
AFTER UPDATE
AS
	IF EXISTS (
		SELECT 1
		FROM OUTCOMES o1
		JOIN inserted i ON o1.BATTLE = i.NAME
		JOIN OUTCOMES o2 ON o2.SHIP = o1.SHIP
		JOIN BATTLES b2 ON b2.NAME = o2.BATTLE
		WHERE o2.RESULT = 'sunk'
		  AND i.DATE > b2.DATE
	)
BEGIN 
	RAISERROR ('...', 16, 10)
	ROLLBACK
END